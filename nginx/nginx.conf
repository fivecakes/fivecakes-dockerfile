#user git; #指定Nginx Worker进程运行用户以及用户组，默认由nobody账号运行
worker_processes  2; #指定了Nginx要开启的子进程数,建议指定和CPU的数量一样的进程数即可


error_log  /workspace/log/nginx/error.log warn;  #全局错误日志文件
pid        /var/run/nginx.pid;                   #进程id的存储文件位置


events {
	use epoll;                                   #对于Linux系统，epoll工作模式是首选
    worker_connections  1024;                    #定义Nginx每个进程的最大连接数
}


http {
	#设定文件的mime类型
    include       /usr/local/nginx/conf/mime.types;
    default_type  application/octet-stream;
	
	charset utf-8; 								#默认编码

	client_max_body_size 10M;
	
	#去除错误新添加的
	server_names_hash_max_size 512;
	server_names_hash_bucket_size 128;
	
	#FastCGI相关参数是为了改善网站的性能：减少资源占用，提高访问速度。下面参数看字面意思都能理解。
	fastcgi_connect_timeout 300;
	fastcgi_send_timeout 300;
	fastcgi_read_timeout 300;
	fastcgi_buffer_size 64k;
	fastcgi_buffers 4 64k;
	fastcgi_busy_buffers_size 128k;
	fastcgi_temp_file_write_size 128k;
	
	#日志格式
    log_format  main  '$server_name $remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for" $request_time';

	#日志文件
    access_log  /workspace/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush     on;

	#超过这个时间之后，服务器会关闭该连接
    keepalive_timeout  65;

	#gzip压缩功能设置
    gzip on;
	gzip_min_length  1100;
	gzip_proxied any;
    gzip_types   text/plain text/css text/javascript text/xml application/javascript application/json application/x-javascript application/xml;
    gzip_vary on;
    # end gzip configuration
	
	
	server {
		listen       80;
		server_name  localhost;
		root		 /workspace/www;
	}
	
    include /workspace/etc/nginx/conf.d/*.conf;
    include /workspace/etc/nginx/conf.d-demo/*.conf;
    include /workspace/etc/nginx/https/*.conf;
    include /workspace/etc/nginx/user-config/*.conf;
    include /workspace/etc/nginx/for-mac/*.conf;
}

